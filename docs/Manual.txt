#程序目录
    安装脚本会将文件安装在/var/opt/adminset
    main为程序代码
    config 配置
    pid pid文件
    logs 日志
    data 常用数据

#站点导航用法
    在站点管理中输入常用的运维工具系统后会自动出现在站点导航界面。

#cmdb用法
    利用scripts/agent_post_info.py 自动上报主机相关信息到CMDB
    获取主机信息
    http://your_server_ip/cmdb/get/host/?token=your_token&name=host_name
    获取组信息
    http://your_server_ip/cmdb/get/group/?token=your_token&name=group_name
    http://your_server_ip/cmdb/get/group/?token=your_token&name=all
# 定时任务用法
    首先新建interval 或crontab
    新建任务填写名字
    选择间隔或crontab
    在Keyword arguments:处的写法是json格式：
        执行命令<br>
        {"host":"c1", name:"service tomcat restart"}
        执行脚本<br>
        {"host":"c1", name:"reboot.sh"}
    拉到最下边Task (registered)<br>
    setup.tasks.command是直接向目标机器发送命令
    setup.tasks.scripts是在目标机器上执行一个你已经上传到服务器中的脚本
    注意：已经运行任务以后，再去修改任务不会立即生效，需要重启beat组件，在任务编排的后台管理中可以重启。
          这是由于celery的BUG导致，会在社区发布稳定版本以后修复。

#ansible用法
    配置免密钥登陆客机(ansible和shell管理客户机需要此配置)
    在服务器上执行
    ssh-keygen
    ssh-copy-id -i /root/.ssh/id_rsa.pub {客户机IP}
    输入客户机密码后认证成功可以ssh免密登入

    CMDB自动上报主机以后，在ansible页面执行 同步到ansible将主机信息写入ansible的hosts文件
    然后将playbook 或是role脚本上传到/var/opt/adminset/data/playbook 或/var/opt/adminset/data/roles

#shell用法
    CMDB自动上报主机以后，shell界面可以直接调用主机。
    然后将常用脚本上传到/var/opt/adminset/data/scripts 中shell脚本栏将会自动发现脚本。

#权限管理
    1、新建权限如：
    名字：资产管理
    URL：/cmdb/
    2、新建角色：
    名字：资产管理员
    可选择权限：资产管理
    3、新建用户
    在角色一栏选择：资产管理员


#组件启动管理
    service adminset {start|stop|restart}
    service nginx {start|stop|restart}
    service redis {start|stop|restart}
    service mariadb {start|stop|restart}
    service celery {start|stop|restart}
    service beat {start|stop|restart}

#升级与更新
    强烈建设在升级或更新adminset之前先备份数据，并在测试环境验证通过，因为adminset在快速的发展过程中，功能与结果变化较大。<br>
    二次开发时可以在程序安装目标通过git pull 下载最新代码，然后使用rsync.sh 或 update.sh更新运行程序。

# 安全
    强烈建议不要将程序启动在有公网可以直接访问的设备上，如果需要请使用VPN。
    建议生产环境中使用https配置服务器<br>
    由于开发方使，我在django的settings中开启了DEBUG，在生产中需要关闭并指定自己的域名。
